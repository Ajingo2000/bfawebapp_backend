# Generated by Django 5.0.1 on 2024-06-25 18:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BiblicalTheologyLessons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc_number', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pdf_doc', models.FileField(max_length=255, upload_to='Biblical Theology Lessons pdfs/')),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DisciplerClassLessons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc_number', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pdf_doc', models.FileField(max_length=255, upload_to='Discipler Class Lessons pdfs/')),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscipleshipLessons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc_number', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pdf_doc', models.FileField(max_length=255, upload_to='Discipleship Lessons pdfs/')),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MissionaryLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('pdf_doc', models.FileField(max_length=255, upload_to='Missionary Letter/')),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewBelieverDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc_number', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pdf_doc', models.FileField(max_length=255, upload_to='New Believer Documents pdfs/')),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sermon_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SoulWinningLessons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc_number', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pdf_doc', models.FileField(max_length=255, upload_to='Soul Winning Lessons pdfs/')),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VideoDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sermon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(null=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('thumbnail', models.ImageField(upload_to='thumbnails/')),
                ('preview', models.FileField(blank=True, max_length=255, null=True, upload_to='preview/')),
                ('preaching_date', models.DateTimeField(blank=True, null=True)),
                ('preached_by', models.CharField(blank=True, max_length=255, null=True)),
                ('bible_text', models.CharField(blank=True, max_length=255, null=True)),
                ('bible_books', models.CharField(blank=True, max_length=255, null=True)),
                ('bible_chapter', models.CharField(blank=True, max_length=255, null=True)),
                ('bible_verses', models.CharField(blank=True, max_length=255, null=True)),
                ('embed_code', models.TextField(blank=True, null=True)),
                ('youtube_url', models.TextField(blank=True, null=True)),
                ('sermon_audio', models.FileField(max_length=255, upload_to='sermon_audios/')),
                ('upload_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('sermon_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sermons', to='bfaWebApp.sermon_category')),
            ],
            options={
                'ordering': ['-upload_date'],
            },
        ),
    ]
